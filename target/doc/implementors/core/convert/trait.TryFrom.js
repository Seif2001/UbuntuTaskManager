(function() {var implementors = {
"nom":[],
"rustix":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rustix/process/enum.DumpableBehavior.html\" title=\"enum rustix::process::DumpableBehavior\">DumpableBehavior</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rustix/process/enum.TimingMethod.html\" title=\"enum rustix::process::TimingMethod\">TimingMethod</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"rustix/process/enum.EndianMode.html\" title=\"enum rustix::process::EndianMode\">EndianMode</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"rustix/process/enum.TimeStampCounterReadability.html\" title=\"enum rustix::process::TimeStampCounterReadability\">TimeStampCounterReadability</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"rustix/process/enum.MachineCheckMemoryCorruptionKillPolicy.html\" title=\"enum rustix::process::MachineCheckMemoryCorruptionKillPolicy\">MachineCheckMemoryCorruptionKillPolicy</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"rustix/process/enum.FloatingPointMode.html\" title=\"enum rustix::process::FloatingPointMode\">FloatingPointMode</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"rustix/process/enum.SpeculationFeature.html\" title=\"enum rustix::process::SpeculationFeature\">SpeculationFeature</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rustix/thread/enum.SecureComputingMode.html\" title=\"enum rustix::thread::SecureComputingMode\">SecureComputingMode</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"rustix/thread/enum.SysCallUserDispatchFastSwitch.html\" title=\"enum rustix::thread::SysCallUserDispatchFastSwitch\">SysCallUserDispatchFastSwitch</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"rustix/thread/enum.CoreSchedulingScope.html\" title=\"enum rustix::thread::CoreSchedulingScope\">CoreSchedulingScope</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()